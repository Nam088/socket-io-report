import{s as ie,i as ce,A as pe,B as de,j as he,k as ue,g as f,R as q,Q as J,bC as me,G as fe,P as ye,v as j,aW as ge,x as Se,bD as V,a_ as O,bE as xe,bF as be,bG as $,u as I}from"../app.023fc6b8.js";import{s as ve}from"./chunk-QN33PNHL.a17ce93c.js";import{p as Ce}from"./chunk-4BX2VUAB.4eff410f.js";import{p as we}from"./mermaid-parser.core.a82dec5f.js";import"./baseUniq.1587ec6d.js";import"./basePickBy.62420eea.js";import"./clone.1f1926b6.js";var E,K=(E=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=ie,this.getAccTitle=ce,this.setDiagramTitle=pe,this.getDiagramTitle=de,this.getAccDescription=he,this.setAccDescription=ue}getNodes(){return this.nodes}getConfig(){var s;const l=ye,r=q();return J({...l.treemap,...(s=r.treemap)!=null?s:{}})}addNode(l,r){var s;this.nodes.push(l),this.levels.set(l,r),r===0&&(this.outerNodes.push(l),(s=this.root)!=null||(this.root=l))}getRoot(){return{name:"",children:this.outerNodes}}addClass(l,r){var o;const s=(o=this.classes.get(l))!=null?o:{id:l,styles:[],textStyles:[]},c=r.replace(/\\,/g,"\xA7\xA7\xA7").replace(/,/g,";").replace(/§§§/g,",").split(";");c&&c.forEach(g=>{me(g)&&(s!=null&&s.textStyles?s.textStyles.push(g):s.textStyles=[g]),s!=null&&s.styles?s.styles.push(g):s.styles=[g]}),this.classes.set(l,s)}getClasses(){return this.classes}getStylesForClass(l){var r,s;return(s=(r=this.classes.get(l))==null?void 0:r.styles)!=null?s:[]}clear(){fe(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}},(()=>{f(E,"TreeMapDB")})(),E);function Z(p){if(!p.length)return[];const l=[],r=[];return p.forEach(s=>{const c={name:s.name,children:s.type==="Leaf"?void 0:[]};for(c.classSelector=s==null?void 0:s.classSelector,s!=null&&s.cssCompiledStyles&&(c.cssCompiledStyles=[s.cssCompiledStyles]),s.type==="Leaf"&&s.value!==void 0&&(c.value=s.value);r.length>0&&r[r.length-1].level>=s.level;)r.pop();if(r.length===0)l.push(c);else{const o=r[r.length-1].node;o.children?o.children.push(c):o.children=[c]}s.type!=="Leaf"&&r.push({node:c,level:s.level})}),l}f(Z,"buildHierarchy");var Te=f((p,l)=>{var o,g,T,z;Ce(p,l);const r=[];for(const a of(o=p.TreemapRows)!=null?o:[])a.$type==="ClassDefStatement"&&l.addClass((g=a.className)!=null?g:"",(T=a.styleText)!=null?T:"");for(const a of(z=p.TreemapRows)!=null?z:[]){const d=a.item;if(!d)continue;const u=a.indent?parseInt(a.indent):0,_=Le(d),N=d.classSelector?l.getStylesForClass(d.classSelector):[],k=N.length>0?N.join(";"):void 0,H={level:u,name:_,type:d.$type,value:d.value,classSelector:d.classSelector,cssCompiledStyles:k};r.push(H)}const s=Z(r),c=f((a,d)=>{for(const u of a)l.addNode(u,d),u.children&&u.children.length>0&&c(u.children,d+1)},"addNodesRecursively");c(s,0)},"populate"),Le=f(p=>p.name?String(p.name):"","getItemName"),ee={parser:{yy:void 0},parse:f(async p=>{var l;try{const s=await we("treemap",p);j.debug("Treemap AST:",s);const c=(l=ee.parser)==null?void 0:l.yy;if(!(c instanceof K))throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");Te(s,c)}catch(r){throw j.error("Error parsing treemap:",r),r}},"parse")},$e=10,F=10,W=25,Fe=f((p,l,r,s)=>{var Q,U;const c=s.db,o=c.getConfig(),g=(Q=o.padding)!=null?Q:$e,T=c.getDiagramTitle(),z=c.getRoot(),{themeVariables:a}=q();if(!z)return;const d=T?30:0,u=ge(l),_=o.nodeWidth?o.nodeWidth*F:960,N=o.nodeHeight?o.nodeHeight*F:500,k=_,H=N+d;u.attr("viewBox",`0 0 ${k} ${H}`),Se(u,H,k,o.useMaxWidth);let C;try{const e=o.valueFormat||",";if(e==="$0,0")C=f(t=>"$"+V(",")(t),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){const t=/\.\d+/.exec(e),n=t?t[0]:"";C=f(h=>"$"+V(","+n)(h),"valueFormat")}else if(e.startsWith("$")){const t=e.substring(1);C=f(n=>"$"+V(t||"")(n),"valueFormat")}else C=V(e)}catch(e){j.error("Error creating format function:",e),C=V(",")}const A=O().range(["transparent",a.cScale0,a.cScale1,a.cScale2,a.cScale3,a.cScale4,a.cScale5,a.cScale6,a.cScale7,a.cScale8,a.cScale9,a.cScale10,a.cScale11]),te=O().range(["transparent",a.cScalePeer0,a.cScalePeer1,a.cScalePeer2,a.cScalePeer3,a.cScalePeer4,a.cScalePeer5,a.cScalePeer6,a.cScalePeer7,a.cScalePeer8,a.cScalePeer9,a.cScalePeer10,a.cScalePeer11]),R=O().range([a.cScaleLabel0,a.cScaleLabel1,a.cScaleLabel2,a.cScaleLabel3,a.cScaleLabel4,a.cScaleLabel5,a.cScaleLabel6,a.cScaleLabel7,a.cScaleLabel8,a.cScaleLabel9,a.cScaleLabel10,a.cScaleLabel11]);T&&u.append("text").attr("x",k/2).attr("y",d/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(T);const X=u.append("g").attr("transform",`translate(0, ${d})`).attr("class","treemapContainer"),ae=xe(z).sum(e=>{var t;return(t=e.value)!=null?t:0}).sort((e,t)=>{var n,h;return((n=t.value)!=null?n:0)-((h=e.value)!=null?h:0)}),Y=be().size([_,N]).paddingTop(e=>e.children&&e.children.length>0?W+F:0).paddingInner(g).paddingLeft(e=>e.children&&e.children.length>0?F:0).paddingRight(e=>e.children&&e.children.length>0?F:0).paddingBottom(e=>e.children&&e.children.length>0?F:0).round(!0)(ae),le=Y.descendants().filter(e=>e.children&&e.children.length>0),P=X.selectAll(".treemapSection").data(le).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);P.append("rect").attr("width",e=>e.x1-e.x0).attr("height",W).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>e.depth===0?"display: none;":""),P.append("clipPath").attr("id",(e,t)=>`clip-section-${l}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",W),P.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>A(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>te(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(e.depth===0)return"display: none;";const t=$({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),P.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",W/2).attr("dominant-baseline","middle").text(e=>e.depth===0?"":e.data.name).attr("font-weight","bold").attr("style",e=>{if(e.depth===0)return"display: none;";const t="dominant-baseline: middle; font-size: 12px; fill:"+R(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=$({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).each(function(e){if(e.depth===0)return;const t=I(this),n=e.data.name;t.text(n);const h=e.x1-e.x0,S=6;let x;if(o.showValues!==!1&&e.value){const m=h-10,y=30,v=10;x=m-y-v-S}else x=h-S-6;const b=Math.max(15,x),i=t.node();if(i.getComputedTextLength()>b){const m="...";let y=n;for(;y.length>0;){if(y=n.substring(0,y.length-1),y.length===0){t.text(m),i.getComputedTextLength()>b&&t.text("");break}if(t.text(y+m),i.getComputedTextLength()<=b)break}}}),o.showValues!==!1&&P.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",W/2).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?C(e.value):"").attr("font-style","italic").attr("style",e=>{if(e.depth===0)return"display: none;";const t="text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+R(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=$({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")});const se=Y.leaves(),B=X.selectAll(".treemapLeafGroup").data(se).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);B.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?A(e.parent.data.name):A(e.data.name)).attr("style",e=>$({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?A(e.parent.data.name):A(e.data.name)).attr("stroke-width",3),B.append("clipPath").attr("id",(e,t)=>`clip-${l}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4)),B.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>{const t="text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+R(e.data.name)+";",n=$({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,t)=>`url(#clip-${l}-${t})`).text(e=>e.data.name).each(function(e){const t=I(this),n=e.x1-e.x0,h=e.y1-e.y0,S=t.node(),x=4,L=n-2*x,b=h-2*x;if(L<10||b<10){t.style("display","none");return}let i=parseInt(t.style("font-size"),10);const w=8,m=28,y=.6,v=6,D=2;for(;S.getComputedTextLength()>L&&i>w;)i--,t.style("font-size",`${i}px`);let M=Math.max(v,Math.min(m,Math.round(i*y))),G=i+D+M;for(;G>b&&i>w&&(i--,M=Math.max(v,Math.min(m,Math.round(i*y))),!(M<v&&i===w));)t.style("font-size",`${i}px`),G=i+D+M;t.style("font-size",`${i}px`),(S.getComputedTextLength()>L||i<w||b<i)&&t.style("display","none")}),o.showValues!==!1&&B.append("text").attr("class","treemapValue").attr("x",t=>(t.x1-t.x0)/2).attr("y",function(t){return(t.y1-t.y0)/2}).attr("style",t=>{const n="text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+R(t.data.name)+";",h=$({cssCompiledStyles:t.data.cssCompiledStyles});return n+h.labelStyles.replace("color:","fill:")}).attr("clip-path",(t,n)=>`url(#clip-${l}-${n})`).text(t=>t.value?C(t.value):"").each(function(t){const n=I(this),h=this.parentNode;if(!h){n.style("display","none");return}const S=I(h).select(".treemapLabel");if(S.empty()||S.style("display")==="none"){n.style("display","none");return}const x=parseFloat(S.style("font-size")),L=28,b=.6,i=6,w=2,m=Math.max(i,Math.min(L,Math.round(x*b)));n.style("font-size",`${m}px`);const v=(t.y1-t.y0)/2+x/2+w;n.attr("y",v);const D=t.x1-t.x0,re=t.y1-t.y0-4,oe=D-2*4;n.node().getComputedTextLength()>oe||v+m>re||m<i?n.style("display","none"):n.style("display",null)});const ne=(U=o.diagramPadding)!=null?U:8;ve(u,ne,"flowchart",(o==null?void 0:o.useMaxWidth)||!1)},"draw"),ze=f(function(p,l){return l.db.getClasses()},"getClasses"),Ne={draw:Fe,getClasses:ze},ke={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},Ae=f(({treemap:p}={})=>{const l=J(ke,p);return`
  .treemapNode.section {
    stroke: ${l.sectionStrokeColor};
    stroke-width: ${l.sectionStrokeWidth};
    fill: ${l.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${l.leafStrokeColor};
    stroke-width: ${l.leafStrokeWidth};
    fill: ${l.leafFillColor};
  }
  .treemapLabel {
    fill: ${l.labelColor};
    font-size: ${l.labelFontSize};
  }
  .treemapValue {
    fill: ${l.valueColor};
    font-size: ${l.valueFontSize};
  }
  .treemapTitle {
    fill: ${l.titleColor};
    font-size: ${l.titleFontSize};
  }
  `},"getStyles"),Pe=Ae,Ie={parser:ee,get db(){return new K},renderer:Ne,styles:Pe};export{Ie as diagram};
